{"ast":null,"code":"var _jsxFileName = \"/Users/Kim/Documents/Allergens React Proj/allergens/src/App.js\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const itemList = [\"Decyl Glucoside\", \"Alkyl (c8,c10) Polyglycoside\", \"APG0810\", \"(C8-10) Alkyl ether of corn sugar\", \"C16H32O6\", \"D-Glucopyranoside, decyl\", \"D-Glucopyranose, Oligomeric, Decyl Octyl Glycosides\", \"D-glucose, decyl octyl ethers, oligomeric\", \"Decyl D-glucopyranoside\", \"Decyl D-glucoside\", \"Decyl octyl d-glucose\", \"Glucoside, decyl\", \"Hexyl cinnamic aldehyde (Article Number H-025\", \"Coumarin (Article Number C-038)\", \"Farnesol (Article Number F-004)\", \"Hydroxyisohexyl 3 Cyclohexene Carboxaldehyde (Article Number L-003)\", \"Citral (Article Number C-036)\", \"Citronellol (Article Number C-037)\", \"Amyl Cinnamal (Article Number A-014)\", \"Cinnamyl Alcohol (Article Number C-013)\", \"Cinnamal (Article Number C-014)\", \"Eugeno (Article Number E-016)\", \"Geraniol (Article Number G-001)\", \"Hydroxycitronellal (Article Number H-008)\", \"Isoeugenol (Article Number I-002)\", \"Oakmoss Absolute (Article Number O-001)\", \"1,20Dibromo-2,4-dicyanobutane\", \"2-Bromo-2 (bromomethyl) glutaronitrile\", \"2-Bromo-2 (bromomethyl) pentanedinitrile\", \"Dibromodicyanobutane\", \"Merquat 2200\", \"Metacide 38\", \"Tektamer 38\", \"Toupai DM\"];\n  const [filteredList, setFilteredList] = new useState(itemList);\n  const filterBySearch = event => {\n    // Access input value\n    const query = event.target.value;\n    // Create copy of item list\n    var updatedList = [...itemList];\n    // Include all elements which includes the search query\n    updatedList = updatedList.filter(item => {\n      return item.toLowerCase().indexOf(query.toLowerCase()) !== -1;\n    });\n    // Trigger render with updated values\n    setFilteredList(updatedList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-text\",\n        children: \"Search:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"search-box\",\n        onChange: filterBySearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"item-list\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: filteredList.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","itemList","filteredList","setFilteredList","filterBySearch","event","query","target","value","updatedList","filter","item","toLowerCase","indexOf","map","index"],"sources":["/Users/Kim/Documents/Allergens React Proj/allergens/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  const itemList = [\n    \"Decyl Glucoside\",\n    \"Alkyl (c8,c10) Polyglycoside\",\n    \"APG0810\",\n    \"(C8-10) Alkyl ether of corn sugar\",\n    \"C16H32O6\",\n    \"D-Glucopyranoside, decyl\",\n    \"D-Glucopyranose, Oligomeric, Decyl Octyl Glycosides\",\n    \"D-glucose, decyl octyl ethers, oligomeric\",\n    \"Decyl D-glucopyranoside\",\n    \"Decyl D-glucoside\",\n    \"Decyl octyl d-glucose\",\n    \"Glucoside, decyl\",\n    \"Hexyl cinnamic aldehyde (Article Number H-025\", \n    \"Coumarin (Article Number C-038)\", \n    \"Farnesol (Article Number F-004)\", \n    \"Hydroxyisohexyl 3 Cyclohexene Carboxaldehyde (Article Number L-003)\",\n    \"Citral (Article Number C-036)\",\n    \"Citronellol (Article Number C-037)\",\n    \"Amyl Cinnamal (Article Number A-014)\",\n    \"Cinnamyl Alcohol (Article Number C-013)\",\n    \"Cinnamal (Article Number C-014)\",\n    \"Eugeno (Article Number E-016)\",\n    \"Geraniol (Article Number G-001)\",\n    \"Hydroxycitronellal (Article Number H-008)\",\n    \"Isoeugenol (Article Number I-002)\",\n    \"Oakmoss Absolute (Article Number O-001)\",\n    \n    \"1,20Dibromo-2,4-dicyanobutane\",\n    \"2-Bromo-2 (bromomethyl) glutaronitrile\",\n    \"2-Bromo-2 (bromomethyl) pentanedinitrile\",\n    \"Dibromodicyanobutane\",\n    \"Merquat 2200\",\n    \"Metacide 38\",\n    \"Tektamer 38\",\n    \"Toupai DM\"\n\n  ];\n\n  const [filteredList, setFilteredList] = new useState(itemList);\n\n  const filterBySearch = (event) => {\n    // Access input value\n    const query = event.target.value;\n    // Create copy of item list\n    var updatedList = [...itemList];\n    // Include all elements which includes the search query\n    updatedList = updatedList.filter((item) => {\n      return item.toLowerCase().indexOf(query.toLowerCase()) !== -1;\n    });\n    // Trigger render with updated values\n    setFilteredList(updatedList);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"search-header\">\n        <div className=\"search-text\">Search:</div>\n        <input id=\"search-box\" onChange={filterBySearch} />\n      </div>\n      <div id=\"item-list\">\n        <ol>\n          {filteredList.map((item, index) => (\n            <li key={index}>{item}</li>\n          ))}\n        </ol>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,SAASC,GAAG,GAAG;EACb,MAAMC,QAAQ,GAAG,CACf,iBAAiB,EACjB,8BAA8B,EAC9B,SAAS,EACT,mCAAmC,EACnC,UAAU,EACV,0BAA0B,EAC1B,qDAAqD,EACrD,2CAA2C,EAC3C,yBAAyB,EACzB,mBAAmB,EACnB,uBAAuB,EACvB,kBAAkB,EAClB,+CAA+C,EAC/C,iCAAiC,EACjC,iCAAiC,EACjC,qEAAqE,EACrE,+BAA+B,EAC/B,oCAAoC,EACpC,sCAAsC,EACtC,yCAAyC,EACzC,iCAAiC,EACjC,+BAA+B,EAC/B,iCAAiC,EACjC,2CAA2C,EAC3C,mCAAmC,EACnC,yCAAyC,EAEzC,+BAA+B,EAC/B,wCAAwC,EACxC,0CAA0C,EAC1C,sBAAsB,EACtB,cAAc,EACd,aAAa,EACb,aAAa,EACb,WAAW,CAEZ;EAED,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG,IAAIJ,QAAQ,CAACE,QAAQ,CAAC;EAE9D,MAAMG,cAAc,GAAIC,KAAK,IAAK;IAChC;IACA,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAChC;IACA,IAAIC,WAAW,GAAG,CAAC,GAAGR,QAAQ,CAAC;IAC/B;IACAQ,WAAW,GAAGA,WAAW,CAACC,MAAM,CAAEC,IAAI,IAAK;MACzC,OAAOA,IAAI,CAACC,WAAW,EAAE,CAACC,OAAO,CAACP,KAAK,CAACM,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC;IAC/D,CAAC,CAAC;IACF;IACAT,eAAe,CAACM,WAAW,CAAC;EAC9B,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAK,SAAS,EAAC,eAAe;MAAA,wBAC5B;QAAK,SAAS,EAAC,aAAa;QAAA,UAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAM,eAC1C;QAAO,EAAE,EAAC,YAAY;QAAC,QAAQ,EAAEL;MAAe;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/C,eACN;MAAK,EAAE,EAAC,WAAW;MAAA,uBACjB;QAAA,UACGF,YAAY,CAACY,GAAG,CAAC,CAACH,IAAI,EAAEI,KAAK,kBAC5B;UAAA,UAAiBJ;QAAI,GAAZI,KAAK;UAAA;UAAA;UAAA;QAAA,QACf;MAAC;QAAA;QAAA;QAAA;MAAA;IACC;MAAA;MAAA;MAAA;IAAA,QACD;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,KAtEQf,GAAG;AAwEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}